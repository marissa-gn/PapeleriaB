// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBamby.Data;

#nullable disable

namespace ProyectoBamby.Migrations
{
    [DbContext(typeof(PapeBambyContext))]
    [Migration("20230610001309_Bamby")]
    partial class Bamby
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoBamby.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.HasKey("MarcaId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            MarcaId = 1,
                            Nombre = "Crayola"
                        },
                        new
                        {
                            MarcaId = 2,
                            Nombre = "Paper Mate"
                        },
                        new
                        {
                            MarcaId = 3,
                            Nombre = "Dixon"
                        },
                        new
                        {
                            MarcaId = 4,
                            Nombre = "Maped"
                        },
                        new
                        {
                            MarcaId = 5,
                            Nombre = "Bic"
                        },
                        new
                        {
                            MarcaId = 6,
                            Nombre = "Pelikan"
                        },
                        new
                        {
                            MarcaId = 7,
                            Nombre = "Azor"
                        },
                        new
                        {
                            MarcaId = 8,
                            Nombre = "Scribe"
                        },
                        new
                        {
                            MarcaId = 9,
                            Nombre = "Indra"
                        });
                });

            modelBuilder.Entity("ProyectoBamby.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TipoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 89,
                            Descripcion = "Herramienta de corte utilizada para recortar papel, cartulina u otros materiales.",
                            Imagen = "Tijeras.jpg",
                            MarcaId = 9,
                            Nombre = "Tijeras",
                            Precio = 15m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 20,
                            Descripcion = "Herramienta de corte utilizada para recortar papel, cartulina u otros materiales.",
                            Imagen = "Tijeras.jpg",
                            MarcaId = 1,
                            Nombre = "Tijeras Piñatera",
                            Precio = 35m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 510,
                            Descripcion = "Herramientas utilizados para tomar notas, realizar ejercicios, hacer dibujos o llevar un registro de las tareas y asignaturas. ",
                            Imagen = "Cuadernos.jpg",
                            MarcaId = 8,
                            Nombre = "Cuadernos",
                            Precio = 150m,
                            TipoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 160,
                            Descripcion = "Tipo de pluma conica con raquis muy corto, o ausente, cuyas barbas están sueltas y no se entrelazan",
                            Imagen = "pluminesCrayola.jpg",
                            MarcaId = 1,
                            Nombre = "Plumines 100 piezas",
                            Precio = 550m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 56,
                            Descripcion = "Herramienta que se utiliza para unir varias hojas de papel juntas mediante grapas.",
                            Imagen = "Engrapadora.jpg",
                            MarcaId = 6,
                            Nombre = "Engrapadoras",
                            Precio = 40m,
                            TipoId = 2
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 260,
                            Descripcion = "Una herramienta de medición utilizada para trazar líneas rectas o tomar medidas precisas.",
                            Imagen = "Reglas.jpg",
                            MarcaId = 2,
                            Nombre = "Regla",
                            Precio = 10m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 50,
                            Descripcion = "Adhesivo utilizado para unir diferentes elementos, como papel, cartón o tela.",
                            Imagen = "Prit.jpg",
                            MarcaId = 4,
                            Nombre = "Pegamento Grande",
                            Precio = 20m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 92,
                            Descripcion = " Instrumento utilizado para afilar los lápices y mantener su punta en buen estado.",
                            Imagen = "Sacapuntas.jpg",
                            MarcaId = 9,
                            Nombre = "Sacapuntas",
                            Precio = 5m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 73,
                            Descripcion = "Utilizados para organizar y almacenar los documentos, hojas sueltas y trabajos realizados por los estudiantes..",
                            Imagen = "Carpetas.jpg",
                            MarcaId = 2,
                            Nombre = "Carpetas y archivadores",
                            Precio = 90m,
                            TipoId = 2
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 28,
                            Descripcion = "Un dispositivo electrónico que se utiliza para realizar cálculos matemáticos.",
                            Imagen = "Calculadora.jpg",
                            MarcaId = 9,
                            Nombre = "Calculadora",
                            Precio = 350m,
                            TipoId = 4
                        },
                        new
                        {
                            Id = 11,
                            Cantidad = 46,
                            Descripcion = "Una bolsa o morral donde se guardan todos los útiles escolares para transportarlos cómodamente.",
                            Imagen = "Mochila.jpg",
                            MarcaId = 4,
                            Nombre = "Mochila",
                            Precio = 550m,
                            TipoId = 3
                        },
                        new
                        {
                            Id = 12,
                            Cantidad = 25,
                            Descripcion = "Pequeñas herramientas utilizadas para eliminar los errores y borrar marcas de lápiz. ",
                            Imagen = ".jpg",
                            MarcaId = 6,
                            Nombre = "Goma de borrar",
                            Precio = 7m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 13,
                            Cantidad = 82,
                            Descripcion = "Herramientas básicas de escritura que se utilizan para tomar apuntes y completar tareas.",
                            Imagen = "Lapices.jpg",
                            MarcaId = 2,
                            Nombre = "Lápices y bolígrafos",
                            Precio = 5m,
                            TipoId = 1
                        },
                        new
                        {
                            Id = 14,
                            Cantidad = 92,
                            Descripcion = " Un instrumento utilizado para trazar círculos y arcos.",
                            Imagen = "Compas.jpg",
                            MarcaId = 5,
                            Nombre = "Compas",
                            Precio = 60m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 15,
                            Cantidad = 83,
                            Descripcion = "Los marcadores son instrumentos de escritura con tinta líquida o de gel que se utilizan para resaltar o subrayar texto.",
                            Imagen = "Marcador.jpg",
                            MarcaId = 3,
                            Nombre = "Marcadores",
                            Precio = 15m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 16,
                            Cantidad = 76,
                            Descripcion = "Pequeñas notas adhesivas que se utilizan para escribir mensajes o recordatorios breves.",
                            Imagen = "Post-it.jpg",
                            MarcaId = 4,
                            Nombre = "Post-it",
                            Precio = 12m,
                            TipoId = 5
                        },
                        new
                        {
                            Id = 17,
                            Cantidad = 46,
                            Descripcion = "Mouse para computadora, con clabe USB.",
                            Imagen = "Mouse.jpg",
                            MarcaId = 8,
                            Nombre = "Mouse",
                            Precio = 150m,
                            TipoId = 4
                        },
                        new
                        {
                            Id = 18,
                            Cantidad = 10,
                            Descripcion = "Audifonos inhalambricos de larga duracion.",
                            Imagen = "Audifonos.jpg",
                            MarcaId = 2,
                            Nombre = "Audifonos",
                            Precio = 560m,
                            TipoId = 4
                        },
                        new
                        {
                            Id = 19,
                            Cantidad = 17,
                            Descripcion = "Unidad de almacenamiento, USB",
                            Imagen = "USB.jpg",
                            MarcaId = 7,
                            Nombre = "USB 16GB",
                            Precio = 350m,
                            TipoId = 4
                        },
                        new
                        {
                            Id = 20,
                            Cantidad = 900,
                            Descripcion = "Hojas de tamaño carta, doble carta de color y blancas. 1 peso por 5 hojas",
                            Imagen = "Hojas.jpg",
                            MarcaId = 1,
                            Nombre = "Hojas blancas y de color",
                            Precio = 1m,
                            TipoId = 5
                        });
                });

            modelBuilder.Entity("ProyectoBamby.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Altamirano Socorro",
                            MarcaId = 1,
                            Nombre = "Rodolfo"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Estrada Jimenez",
                            MarcaId = 7,
                            Nombre = "Juan Carlos"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Morales Rodriguez",
                            MarcaId = 8,
                            Nombre = "Hilario"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Ortega Navarrete",
                            MarcaId = 2,
                            Nombre = "Laura"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Perez Narvaez",
                            MarcaId = 5,
                            Nombre = "Rodrigo"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Gonzalez Solis",
                            MarcaId = 3,
                            Nombre = "Sandra"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Alcantara Dominguez",
                            MarcaId = 4,
                            Nombre = "Julio Cesar"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Ramirez Campos",
                            MarcaId = 6,
                            Nombre = "Alvaro"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Sanchez Ross",
                            MarcaId = 9,
                            Nombre = "Karina"
                        });
                });

            modelBuilder.Entity("ProyectoBamby.Models.Tipo", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoId");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            TipoId = 1,
                            Nombre = "Escritura"
                        },
                        new
                        {
                            TipoId = 2,
                            Nombre = "Organizacion"
                        },
                        new
                        {
                            TipoId = 3,
                            Nombre = "Embalaje"
                        },
                        new
                        {
                            TipoId = 4,
                            Nombre = "Tecnologia"
                        },
                        new
                        {
                            TipoId = 5,
                            Nombre = "Arte"
                        });
                });

            modelBuilder.Entity("ProyectoBamby.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Cruz Mateo",
                            Nombre = "Jose Eduardo",
                            Turno = "Matutino"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Guzman Perez",
                            Nombre = "Josefina",
                            Turno = "Matutino"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Gonzalez Palomares",
                            Nombre = "Ana Maria",
                            Turno = "Matutino"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Solis Correa",
                            Nombre = "Antonio",
                            Turno = "Vespertino"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Linares Cruz",
                            Nombre = "Alejandra",
                            Turno = "Vespertino"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Flores Ortega",
                            Nombre = "Evelyn",
                            Turno = "Matutino"
                        });
                });

            modelBuilder.Entity("ProyectoBamby.Models.Ventas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 6,
                            ProductoId = 12,
                            Total = 678m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 14,
                            ProductoId = 11,
                            Total = 256m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 65,
                            ProductoId = 2,
                            Total = 752m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 78,
                            ProductoId = 4,
                            Total = 441m,
                            VendedorId = 4
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 3,
                            ProductoId = 6,
                            Total = 4731m,
                            VendedorId = 5
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 9,
                            ProductoId = 8,
                            Total = 426m,
                            VendedorId = 6
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 18,
                            ProductoId = 13,
                            Total = 751m,
                            VendedorId = 3
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 231,
                            ProductoId = 1,
                            Total = 424m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 67,
                            ProductoId = 4,
                            Total = 785m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 10,
                            Cantidad = 89,
                            ProductoId = 9,
                            Total = 242m,
                            VendedorId = 3
                        },
                        new
                        {
                            Id = 11,
                            Cantidad = 9,
                            ProductoId = 10,
                            Total = 862m,
                            VendedorId = 6
                        },
                        new
                        {
                            Id = 12,
                            Cantidad = 34,
                            ProductoId = 5,
                            Total = 853m,
                            VendedorId = 4
                        },
                        new
                        {
                            Id = 13,
                            Cantidad = 74,
                            ProductoId = 7,
                            Total = 326m,
                            VendedorId = 5
                        },
                        new
                        {
                            Id = 14,
                            Cantidad = 29,
                            ProductoId = 20,
                            Total = 947m,
                            VendedorId = 3
                        },
                        new
                        {
                            Id = 15,
                            Cantidad = 78,
                            ProductoId = 17,
                            Total = 632m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 16,
                            Cantidad = 45,
                            ProductoId = 18,
                            Total = 9635m,
                            VendedorId = 1
                        });
                });

            modelBuilder.Entity("ProyectoBamby.Models.Marca", b =>
                {
                    b.HasOne("ProyectoBamby.Models.Proveedor", null)
                        .WithMany("Marcas")
                        .HasForeignKey("ProveedorId");
                });

            modelBuilder.Entity("ProyectoBamby.Models.Producto", b =>
                {
                    b.HasOne("ProyectoBamby.Models.Marca", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoBamby.Models.Tipo", "Tipo")
                        .WithMany("Productos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ProyectoBamby.Models.Ventas", b =>
                {
                    b.HasOne("ProyectoBamby.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoBamby.Models.Vendedor", "Vendedor")
                        .WithMany("Ventas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("ProyectoBamby.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ProyectoBamby.Models.Proveedor", b =>
                {
                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("ProyectoBamby.Models.Tipo", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ProyectoBamby.Models.Vendedor", b =>
                {
                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
